/*
 * This file is generated by jOOQ.
 */
package place.sita.labelle.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import place.sita.labelle.jooq.tables.TagImage;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagImageRecord extends TableRecordImpl<TagImageRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tag_image.image_id</code>.
     */
    public void setImageId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tag_image.image_id</code>.
     */
    public UUID getImageId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.tag_image.tag_id</code>.
     */
    public void setTagId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tag_image.tag_id</code>.
     */
    public UUID getTagId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TagImage.TAG_IMAGE.IMAGE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return TagImage.TAG_IMAGE.TAG_ID;
    }

    @Override
    public UUID component1() {
        return getImageId();
    }

    @Override
    public UUID component2() {
        return getTagId();
    }

    @Override
    public UUID value1() {
        return getImageId();
    }

    @Override
    public UUID value2() {
        return getTagId();
    }

    @Override
    public TagImageRecord value1(UUID value) {
        setImageId(value);
        return this;
    }

    @Override
    public TagImageRecord value2(UUID value) {
        setTagId(value);
        return this;
    }

    @Override
    public TagImageRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagImageRecord
     */
    public TagImageRecord() {
        super(TagImage.TAG_IMAGE);
    }

    /**
     * Create a detached, initialised TagImageRecord
     */
    public TagImageRecord(UUID imageId, UUID tagId) {
        super(TagImage.TAG_IMAGE);

        setImageId(imageId);
        setTagId(tagId);
    }
}
