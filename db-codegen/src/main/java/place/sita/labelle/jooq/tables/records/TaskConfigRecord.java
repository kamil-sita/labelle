/*
 * This file is generated by jOOQ.
 */
package place.sita.labelle.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import place.sita.labelle.jooq.tables.TaskConfig;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskConfigRecord extends UpdatableRecordImpl<TaskConfigRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.task_config.task_id</code>.
     */
    public void setTaskId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task_config.task_id</code>.
     */
    public UUID getTaskId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.task_config.config</code>.
     */
    public void setConfig(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task_config.config</code>.
     */
    public String getConfig() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TaskConfig.TASK_CONFIG.TASK_ID;
    }

    @Override
    public Field<String> field2() {
        return TaskConfig.TASK_CONFIG.CONFIG;
    }

    @Override
    public UUID component1() {
        return getTaskId();
    }

    @Override
    public String component2() {
        return getConfig();
    }

    @Override
    public UUID value1() {
        return getTaskId();
    }

    @Override
    public String value2() {
        return getConfig();
    }

    @Override
    public TaskConfigRecord value1(UUID value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TaskConfigRecord value2(String value) {
        setConfig(value);
        return this;
    }

    @Override
    public TaskConfigRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskConfigRecord
     */
    public TaskConfigRecord() {
        super(TaskConfig.TASK_CONFIG);
    }

    /**
     * Create a detached, initialised TaskConfigRecord
     */
    public TaskConfigRecord(UUID taskId, String config) {
        super(TaskConfig.TASK_CONFIG);

        setTaskId(taskId);
        setConfig(config);
    }
}
