/*
 * This file is generated by jOOQ.
 */
package place.sita.labelle.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import place.sita.labelle.jooq.tables.Image;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageRecord extends UpdatableRecordImpl<ImageRecord> implements Record7<UUID, UUID, UUID, String, String, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.image.image_resolvable_id</code>.
     */
    public void setImageResolvableId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.image.image_resolvable_id</code>.
     */
    public UUID getImageResolvableId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.image.repository_id</code>.
     */
    public void setRepositoryId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.image.repository_id</code>.
     */
    public UUID getRepositoryId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.image.id</code>.
     */
    public void setId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.image.id</code>.
     */
    public UUID getId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.image.reference_id</code>.
     */
    public void setReferenceId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.image.reference_id</code>.
     */
    public String getReferenceId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.image.parent_reference</code>.
     */
    public void setParentReference(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.image.parent_reference</code>.
     */
    public String getParentReference() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.image.use_tag_delta</code>.
     */
    public void setUseTagDelta(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.image.use_tag_delta</code>.
     */
    public Boolean getUseTagDelta() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.image.use_image_delta</code>.
     */
    public void setUseImageDelta(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.image.use_image_delta</code>.
     */
    public Boolean getUseImageDelta() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, UUID, String, String, Boolean, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, UUID, String, String, Boolean, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Image.IMAGE.IMAGE_RESOLVABLE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return Image.IMAGE.REPOSITORY_ID;
    }

    @Override
    public Field<UUID> field3() {
        return Image.IMAGE.ID;
    }

    @Override
    public Field<String> field4() {
        return Image.IMAGE.REFERENCE_ID;
    }

    @Override
    public Field<String> field5() {
        return Image.IMAGE.PARENT_REFERENCE;
    }

    @Override
    public Field<Boolean> field6() {
        return Image.IMAGE.USE_TAG_DELTA;
    }

    @Override
    public Field<Boolean> field7() {
        return Image.IMAGE.USE_IMAGE_DELTA;
    }

    @Override
    public UUID component1() {
        return getImageResolvableId();
    }

    @Override
    public UUID component2() {
        return getRepositoryId();
    }

    @Override
    public UUID component3() {
        return getId();
    }

    @Override
    public String component4() {
        return getReferenceId();
    }

    @Override
    public String component5() {
        return getParentReference();
    }

    @Override
    public Boolean component6() {
        return getUseTagDelta();
    }

    @Override
    public Boolean component7() {
        return getUseImageDelta();
    }

    @Override
    public UUID value1() {
        return getImageResolvableId();
    }

    @Override
    public UUID value2() {
        return getRepositoryId();
    }

    @Override
    public UUID value3() {
        return getId();
    }

    @Override
    public String value4() {
        return getReferenceId();
    }

    @Override
    public String value5() {
        return getParentReference();
    }

    @Override
    public Boolean value6() {
        return getUseTagDelta();
    }

    @Override
    public Boolean value7() {
        return getUseImageDelta();
    }

    @Override
    public ImageRecord value1(UUID value) {
        setImageResolvableId(value);
        return this;
    }

    @Override
    public ImageRecord value2(UUID value) {
        setRepositoryId(value);
        return this;
    }

    @Override
    public ImageRecord value3(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ImageRecord value4(String value) {
        setReferenceId(value);
        return this;
    }

    @Override
    public ImageRecord value5(String value) {
        setParentReference(value);
        return this;
    }

    @Override
    public ImageRecord value6(Boolean value) {
        setUseTagDelta(value);
        return this;
    }

    @Override
    public ImageRecord value7(Boolean value) {
        setUseImageDelta(value);
        return this;
    }

    @Override
    public ImageRecord values(UUID value1, UUID value2, UUID value3, String value4, String value5, Boolean value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageRecord
     */
    public ImageRecord() {
        super(Image.IMAGE);
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(UUID imageResolvableId, UUID repositoryId, UUID id, String referenceId, String parentReference, Boolean useTagDelta, Boolean useImageDelta) {
        super(Image.IMAGE);

        setImageResolvableId(imageResolvableId);
        setRepositoryId(repositoryId);
        setId(id);
        setReferenceId(referenceId);
        setParentReference(parentReference);
        setUseTagDelta(useTagDelta);
        setUseImageDelta(useImageDelta);
    }
}
