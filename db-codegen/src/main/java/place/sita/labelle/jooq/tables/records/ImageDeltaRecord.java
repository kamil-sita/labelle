/*
 * This file is generated by jOOQ.
 */
package place.sita.labelle.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import place.sita.labelle.jooq.tables.ImageDelta;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageDeltaRecord extends TableRecordImpl<ImageDeltaRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.image_delta.image_id</code>.
     */
    public void setImageId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.image_delta.image_id</code>.
     */
    public UUID getImageId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.image_delta.image_resolvable_id</code>.
     */
    public void setImageResolvableId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.image_delta.image_resolvable_id</code>.
     */
    public UUID getImageResolvableId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ImageDelta.IMAGE_DELTA.IMAGE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return ImageDelta.IMAGE_DELTA.IMAGE_RESOLVABLE_ID;
    }

    @Override
    public UUID component1() {
        return getImageId();
    }

    @Override
    public UUID component2() {
        return getImageResolvableId();
    }

    @Override
    public UUID value1() {
        return getImageId();
    }

    @Override
    public UUID value2() {
        return getImageResolvableId();
    }

    @Override
    public ImageDeltaRecord value1(UUID value) {
        setImageId(value);
        return this;
    }

    @Override
    public ImageDeltaRecord value2(UUID value) {
        setImageResolvableId(value);
        return this;
    }

    @Override
    public ImageDeltaRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageDeltaRecord
     */
    public ImageDeltaRecord() {
        super(ImageDelta.IMAGE_DELTA);
    }

    /**
     * Create a detached, initialised ImageDeltaRecord
     */
    public ImageDeltaRecord(UUID imageId, UUID imageResolvableId) {
        super(ImageDelta.IMAGE_DELTA);

        setImageId(imageId);
        setImageResolvableId(imageResolvableId);
    }
}
