/*
 * This file is generated by jOOQ.
 */
package place.sita.labelle.jooq.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import place.sita.labelle.jooq.enums.TaskExecutionResult;
import place.sita.labelle.jooq.tables.TaskExecution;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskExecutionRecord extends UpdatableRecordImpl<TaskExecutionRecord> implements Record8<UUID, UUID, String, TaskExecutionResult, OffsetDateTime, OffsetDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.task_execution.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task_execution.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.task_execution.task_id</code>.
     */
    public void setTaskId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task_execution.task_id</code>.
     */
    public UUID getTaskId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.task_execution.log</code>.
     */
    public void setLog(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.task_execution.log</code>.
     */
    public String getLog() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.task_execution.result</code>.
     */
    public void setResult(TaskExecutionResult value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.task_execution.result</code>.
     */
    public TaskExecutionResult getResult() {
        return (TaskExecutionResult) get(3);
    }

    /**
     * Setter for <code>public.task_execution.finished_at</code>.
     */
    public void setFinishedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.task_execution.finished_at</code>.
     */
    public OffsetDateTime getFinishedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.task_execution.started_at</code>.
     */
    public void setStartedAt(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.task_execution.started_at</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.task_execution.configuration</code>.
     */
    public void setConfiguration(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.task_execution.configuration</code>.
     */
    public String getConfiguration() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.task_execution.result_value</code>.
     */
    public void setResultValue(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.task_execution.result_value</code>.
     */
    public String getResultValue() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, String, TaskExecutionResult, OffsetDateTime, OffsetDateTime, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, String, TaskExecutionResult, OffsetDateTime, OffsetDateTime, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TaskExecution.TASK_EXECUTION.ID;
    }

    @Override
    public Field<UUID> field2() {
        return TaskExecution.TASK_EXECUTION.TASK_ID;
    }

    @Override
    public Field<String> field3() {
        return TaskExecution.TASK_EXECUTION.LOG;
    }

    @Override
    public Field<TaskExecutionResult> field4() {
        return TaskExecution.TASK_EXECUTION.RESULT;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return TaskExecution.TASK_EXECUTION.FINISHED_AT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return TaskExecution.TASK_EXECUTION.STARTED_AT;
    }

    @Override
    public Field<String> field7() {
        return TaskExecution.TASK_EXECUTION.CONFIGURATION;
    }

    @Override
    public Field<String> field8() {
        return TaskExecution.TASK_EXECUTION.RESULT_VALUE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getTaskId();
    }

    @Override
    public String component3() {
        return getLog();
    }

    @Override
    public TaskExecutionResult component4() {
        return getResult();
    }

    @Override
    public OffsetDateTime component5() {
        return getFinishedAt();
    }

    @Override
    public OffsetDateTime component6() {
        return getStartedAt();
    }

    @Override
    public String component7() {
        return getConfiguration();
    }

    @Override
    public String component8() {
        return getResultValue();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getTaskId();
    }

    @Override
    public String value3() {
        return getLog();
    }

    @Override
    public TaskExecutionResult value4() {
        return getResult();
    }

    @Override
    public OffsetDateTime value5() {
        return getFinishedAt();
    }

    @Override
    public OffsetDateTime value6() {
        return getStartedAt();
    }

    @Override
    public String value7() {
        return getConfiguration();
    }

    @Override
    public String value8() {
        return getResultValue();
    }

    @Override
    public TaskExecutionRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value2(UUID value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value3(String value) {
        setLog(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value4(TaskExecutionResult value) {
        setResult(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value5(OffsetDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value6(OffsetDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value7(String value) {
        setConfiguration(value);
        return this;
    }

    @Override
    public TaskExecutionRecord value8(String value) {
        setResultValue(value);
        return this;
    }

    @Override
    public TaskExecutionRecord values(UUID value1, UUID value2, String value3, TaskExecutionResult value4, OffsetDateTime value5, OffsetDateTime value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskExecutionRecord
     */
    public TaskExecutionRecord() {
        super(TaskExecution.TASK_EXECUTION);
    }

    /**
     * Create a detached, initialised TaskExecutionRecord
     */
    public TaskExecutionRecord(UUID id, UUID taskId, String log, TaskExecutionResult result, OffsetDateTime finishedAt, OffsetDateTime startedAt, String configuration, String resultValue) {
        super(TaskExecution.TASK_EXECUTION);

        setId(id);
        setTaskId(taskId);
        setLog(log);
        setResult(result);
        setFinishedAt(finishedAt);
        setStartedAt(startedAt);
        setConfiguration(configuration);
        setResultValue(resultValue);
    }
}
